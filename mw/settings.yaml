### This config file contains required core defaults that must be set, along with a handful of common optional settings.
### For a full list of available settings, see https://microsoft.github.io/graphrag/config/yaml/

### LLM settings ###
## There are a number of settings to tune the threading and token limits for LLM calls - check the docs.

models:
  default_chat_model:
    api_key: ${GRAPHRAG_API_KEY} # set this in the generated .env file
    type: azure_openai_chat # or azure_openai_chat
    auth_type: api_key # or azure_managed_identity
    model: gpt-4o-mini
    model_supports_json: true # recommended if this is available for your model.
    parallelization_num_threads: 50
    parallelization_stagger: 0.3
    async_mode: threaded # or asyncio
    # audience: "https://cognitiveservices.azure.com/.default"
    api_base: https://cog2-trnz2cbjn4ofs.openai.azure.com/
    api_version: "2024-08-01-preview"
    # organization: <organization_id>
    deployment_name: "gpt-4o-mini"
    supports_system: true
    supports_temperature : true
  default_embedding_model:
    api_key: ${GRAPHRAG_API_KEY}
    type: azure_openai_embedding # or azure_openai_embedding
    auth_type: api_key # or azure_managed_identity
    model: text-embedding-3-small
    parallelization_num_threads: 50
    parallelization_stagger: 0.3
    async_mode: threaded # or asyncio
    api_base: https://cog2-trnz2cbjn4ofs.openai.azure.com/
    api_version: "2023-05-15"
    # audience: "https://cognitiveservices.azure.com/.default"
    # organization: <organization_id>
    deployment_name: "text-embedding-3-large"

vector_store:
  default_vector_store:
    type: lancedb
    db_uri: output/lancedb
    container_name: default
    overwrite: True

embeddings:
  model_id: default_embedding_model
  vector_store_id: default_vector_store

### Input settings ###

input:
  type: file # or blob
  file_type: text # or csv
  base_dir: "input"
  file_encoding: utf-8
  file_pattern: ".*\\.txt$$"

chunks:
  size: 4000
  overlap: 0
  group_by_columns: [id]

### Output settings ###
## If blob storage is specified in the following four sections,
## connection_string and container_name must be provided

cache:
  type: file # [file, blob, cosmosdb]
  base_dir: "cache"

reporting:
  type: file # [file, blob, cosmosdb]
  base_dir: "logs"

output:
  type: file # [file, blob, cosmosdb]
  base_dir: "output"

## only turn this on if running `graphrag index` with custom settings
## we normally use `graphrag update` with the defaults
update_index_output:
  # type: file # [file, blob, cosmosdb]
  # base_dir: "update_output"

### Workflow settings ###

entity_extraction:
  model_id: default_chat_model
  prompt: "prompts/entity_extraction_MW_simple.txt"
  #prompt: "prompts/entity_extraction_original.txt"
  entity_types: [QUOTE_ID,APPLICATION_NAME,APPLICATION_COMPLEXITY,CELL,FILTER,CHEMICAL,OPTICS]
  max_gleanings: 1
  normalize_entities: false
  normalize_threshold: 0.98
  normalize_model: default_embedding_model # default_embedding_model or "gbyuvd/ChemEmbed-v01"

summarize_descriptions:
  model_id: default_chat_model
  prompt: "prompts/summarize_descriptions.txt"
  max_length: 500

extract_graph_nlp:
  text_analyzer:
    extractor_type: regex_english # [regex_english, syntactic_parser, cfg]

claim_extraction:
  enabled: false
  model_id: default_chat_model
  prompt: "prompts/claim_extraction.txt"
  description: "Any claims or facts that could be relevant to information discovery."
  max_gleanings: 1

community_reports:
  model_id: default_chat_model
  prompt: "prompts/community_report_MW.txt"
  max_length: 2000
  max_input_length: 8000

cluster_graph:
  strategy: app_name  # options: 'leiden' or 'app_name'
  embed_model: default_embedding_model # default_embedding_model or "gbyuvd/ChemEmbed-v01"
  similarity_threshold: 0.93
  max_cluster_size: 100  

embed_graph:
  enabled: true # if true, will generate node2vec embeddings for nodes

umap:
  enabled: true # if true, will generate UMAP embeddings for nodes (embed_graph must also be enabled)

snapshots:
  graphml: true
  embeddings: true
  transient: false

### Query settings ###
## The prompt locations are required here, but each search method has a number of optional knobs that can be tuned.
## See the config docs: https://microsoft.github.io/graphrag/config/yaml/#query

local_search:
  prompt: "prompts/local_search_system_prompt.txt"

global_search:
  map_prompt: "prompts/global_search_map_system_prompt.txt"
  reduce_prompt: "prompts/global_search_reduce_system_prompt.txt"
  knowledge_prompt: "prompts/global_search_knowledge_system_prompt.txt"

drift_search:
  prompt: "prompts/drift_search_system_prompt.txt"
  reduce_prompt: "prompts/drift_search_reduce_prompt.txt"

basic_search:
  prompt: "prompts/basic_search_system_prompt.txt"
